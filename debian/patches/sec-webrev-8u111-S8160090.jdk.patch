# HG changeset patch
# User ksrini
# Date 1467749317 25200
#      Tue Jul 05 13:08:37 2016 -0700
# Node ID 710f0c95444deb36b422f449f422d925a72f6b2c
# Parent  6be8f327c0a06badff48e62b8504081db6b0a448
8160090: Better signature handling in pack200
Reviewed-by: jrose, mschoene

---
 openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/unpack.cpp |   12 ++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

--- openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/unpack.cpp.orig
+++ openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/unpack.cpp
@@ -157,7 +157,10 @@ struct entry {
 
   const char* utf8String() {
     assert(tagMatches(CONSTANT_Utf8));
-    assert(value.b.len == strlen((const char*)value.b.ptr));
+    if (value.b.len != strlen((const char*)value.b.ptr)) {
+      unpack_abort("bad utf8 encoding");
+      // and fall through
+    }
     return (const char*)value.b.ptr;
   }
 
@@ -1262,10 +1265,10 @@ void unpacker::read_signature_values(ent
     CHECK;
     int nc = 0;
 
-    for ( const char* ncp = form.utf8String() ; *ncp; ncp++) {
-      if (*ncp == 'L')  nc++;
+    for (int j = 0; j < (int)form.value.b.len; j++) {
+      int c = form.value.b.ptr[j];
+      if (c == 'L') nc++;
     }
-
     ncTotal += nc;
     e.refs = U_NEW(entry*, cpMap[i].nrefs = 1 + nc);
     CHECK;
@@ -4642,6 +4645,7 @@ unpacker::file* unpacker::get_next_file(
     entry* e = file_name.getRef();
     CHECK_0;
     cur_file.name = e->utf8String();
+    CHECK_0;
     bool haveLongSize = ((archive_options & AO_HAVE_FILE_SIZE_HI) != 0);
     cur_file.size = file_size_hi.getLong(file_size_lo, haveLongSize);
     if ((archive_options & AO_HAVE_FILE_MODTIME) != 0)
