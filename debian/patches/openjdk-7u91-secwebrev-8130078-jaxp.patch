# HG changeset patch
# User aefimov
# Date 1436974853 -10800
#      Wed Jul 15 18:40:53 2015 +0300
# Node ID f98b8f06a46ad7d7ab19179c8465c2861bf1a7f6
# Parent  c328fccd2b8097f0f5c2c8455d83a3c2e0efad9d
8130078: Document better processing
Reviewed-by: dfuchs, lancea, ahgross

Index: openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl.java
===================================================================
--- openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl.java.orig
+++ openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl.java
@@ -380,6 +380,26 @@ implements XMLDTDScanner, XMLComponent,
 
     } // scanDTDInternalSubset(boolean,boolean,boolean):boolean
 
+    /**
+     * Skip the DTD if javax.xml.stream.supportDTD is false.
+     *
+     * @param supportDTD The value of the property javax.xml.stream.supportDTD.
+     * @return true if DTD is skipped, false otherwise.
+     * @throws java.io.IOException if i/o error occurs
+     */
+    @Override
+    public boolean skipDTD(boolean supportDTD) throws IOException {
+        if (!supportDTD) {
+            fStringBuffer.clear();
+            if (!fEntityScanner.scanData("]", fStringBuffer)) {
+                fEntityScanner.fCurrentEntity.position--;
+            }
+
+            return true;
+        }
+        return false;
+    }
+
     //
     // XMLComponent methods
     //
Index: openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl.java
===================================================================
--- openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl.java.orig
+++ openjdk/jaxp/src/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2003, 2006, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2003, 2015, Oracle and/or its affiliates. All rights reserved.
  */
 
 /*
@@ -1096,11 +1096,14 @@ public class XMLDocumentScannerImpl
                     again = false;
                     switch (fScannerState) {
                         case SCANNER_STATE_DTD_INTERNAL_DECLS: {
+                            boolean moreToScan = false;
+                            if (!fDTDScanner.skipDTD(fSupportDTD)) {
                             // REVISIT: Should there be a feature for
                             //          the "complete" parameter?
                             boolean completeDTD = true;
 
-                            boolean moreToScan = fDTDScanner.scanDTDInternalSubset(completeDTD, fStandalone, fHasExternalDTD && fLoadExternalDTD);
+                                moreToScan = fDTDScanner.scanDTDInternalSubset(completeDTD, fStandalone, fHasExternalDTD && fLoadExternalDTD);
+                            }
                             Entity entity = fEntityScanner.getCurrentEntity();
                             if(entity instanceof Entity.ScannedEntity){
                                 fEndPos=((Entity.ScannedEntity)entity).position;
Index: openjdk/jaxp/src/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner.java
===================================================================
--- openjdk/jaxp/src/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner.java.orig
+++ openjdk/jaxp/src/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner.java
@@ -96,5 +96,14 @@ public interface XMLDTDScanner
     public boolean scanDTDExternalSubset(boolean complete)
         throws IOException, XNIException;
 
+    /**
+     * Skip the DTD if javax.xml.stream.supportDTD is false.
+     * @param supportDTD The value of the property javax.xml.stream.supportDTD.
+     * @return true if DTD is skipped, false otherwise.
+     * @throws java.io.IOException if i/o error occurs
+     */
+    public boolean skipDTD(boolean supportDTD)
+        throws IOException;
+
     public void setLimitAnalyzer(XMLLimitAnalyzer limitAnalyzer);
 } // interface XMLDTDScanner
