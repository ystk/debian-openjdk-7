// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import java.util.logging.*;
public class XkbMapNotifyEvent extends XWrapperBase { 
	private Unsafe unsafe = XlibWrapper.unsafe; 
	private final boolean should_free_memory;
	public static int getSize() { return 104; }
	public int getDataSize() { return getSize(); }

	long pData;

	public long getPData() { return pData; }


	public XkbMapNotifyEvent(long addr) {
		log.finest("Creating");
		pData=addr;
		should_free_memory = false;
	}


	public XkbMapNotifyEvent() {
		log.finest("Creating");
		pData = unsafe.allocateMemory(getSize());
		should_free_memory = true;
	}


	public void dispose() {
		log.finest("Disposing");
		if (should_free_memory) {
			log.finest("freeing memory");
			unsafe.freeMemory(pData); 
	}
		}
	public int get_type() { log.finest("");return (Native.getInt(pData+0)); }
	public void set_type(int v) { log.finest(""); Native.putInt(pData+0, v); }
	public long get_serial() { log.finest("");return (Native.getULong(pData+8)); }
	public void set_serial(long v) { log.finest(""); Native.putULong(pData+8, v); }
	public boolean get_send_event() { log.finest("");return (Native.getBool(pData+16)); }
	public void set_send_event(boolean v) { log.finest(""); Native.putBool(pData+16, v); }
	public long get_display() { log.finest("");return (Native.getLong(pData+24)); }
	public void set_display(long v) { log.finest(""); Native.putLong(pData+24, v); }
	public long get_time() { log.finest("");return (Native.getULong(pData+32)); }
	public void set_time(long v) { log.finest(""); Native.putULong(pData+32, v); }
	public int get_xkb_type() { log.finest("");return (Native.getInt(pData+40)); }
	public void set_xkb_type(int v) { log.finest(""); Native.putInt(pData+40, v); }
	public int get_device() { log.finest("");return (Native.getInt(pData+44)); }
	public void set_device(int v) { log.finest(""); Native.putInt(pData+44, v); }
	public int get_changed() { log.finest("");return (Native.getInt(pData+48)); }
	public void set_changed(int v) { log.finest(""); Native.putInt(pData+48, v); }
	public int get_flags() { log.finest("");return (Native.getInt(pData+52)); }
	public void set_flags(int v) { log.finest(""); Native.putInt(pData+52, v); }
	public int get_first_type() { log.finest("");return (Native.getInt(pData+56)); }
	public void set_first_type(int v) { log.finest(""); Native.putInt(pData+56, v); }
	public int get_num_types() { log.finest("");return (Native.getInt(pData+60)); }
	public void set_num_types(int v) { log.finest(""); Native.putInt(pData+60, v); }
	public int get_min_key_code() { log.finest("");return (Native.getInt(pData+64)); }
	public void set_min_key_code(int v) { log.finest(""); Native.putInt(pData+64, v); }
	public int get_max_key_code() { log.finest("");return (Native.getInt(pData+65)); }
	public void set_max_key_code(int v) { log.finest(""); Native.putInt(pData+65, v); }
	public int get_first_key_sym() { log.finest("");return (Native.getInt(pData+66)); }
	public void set_first_key_sym(int v) { log.finest(""); Native.putInt(pData+66, v); }
	public int get_first_key_act() { log.finest("");return (Native.getInt(pData+67)); }
	public void set_first_key_act(int v) { log.finest(""); Native.putInt(pData+67, v); }
	public int get_first_key_behavior() { log.finest("");return (Native.getInt(pData+68)); }
	public void set_first_key_behavior(int v) { log.finest(""); Native.putInt(pData+68, v); }
	public int get_first_key_explicit() { log.finest("");return (Native.getInt(pData+69)); }
	public void set_first_key_explicit(int v) { log.finest(""); Native.putInt(pData+69, v); }
	public int get_first_modmap_key() { log.finest("");return (Native.getInt(pData+70)); }
	public void set_first_modmap_key(int v) { log.finest(""); Native.putInt(pData+70, v); }
	public int get_first_vmodmap_key() { log.finest("");return (Native.getInt(pData+71)); }
	public void set_first_vmodmap_key(int v) { log.finest(""); Native.putInt(pData+71, v); }
	public int get_num_key_syms() { log.finest("");return (Native.getInt(pData+72)); }
	public void set_num_key_syms(int v) { log.finest(""); Native.putInt(pData+72, v); }
	public int get_num_key_acts() { log.finest("");return (Native.getInt(pData+76)); }
	public void set_num_key_acts(int v) { log.finest(""); Native.putInt(pData+76, v); }
	public int get_num_key_behaviors() { log.finest("");return (Native.getInt(pData+80)); }
	public void set_num_key_behaviors(int v) { log.finest(""); Native.putInt(pData+80, v); }
	public int get_num_key_explicit() { log.finest("");return (Native.getInt(pData+84)); }
	public void set_num_key_explicit(int v) { log.finest(""); Native.putInt(pData+84, v); }
	public int get_num_modmap_keys() { log.finest("");return (Native.getInt(pData+88)); }
	public void set_num_modmap_keys(int v) { log.finest(""); Native.putInt(pData+88, v); }
	public int get_num_vmodmap_keys() { log.finest("");return (Native.getInt(pData+92)); }
	public void set_num_vmodmap_keys(int v) { log.finest(""); Native.putInt(pData+92, v); }
	public int get_vmods() { log.finest("");return (Native.getInt(pData+96)); }
	public void set_vmods(int v) { log.finest(""); Native.putInt(pData+96, v); }


	String getName() {
		return "XkbMapNotifyEvent"; 
	}


	String getFieldsAsString() {
		String ret="";

		ret += ""+"type = " + XlibWrapper.eventToString[get_type()] +", ";
		ret += ""+"serial = " + get_serial() +", ";
		ret += ""+"send_event = " + get_send_event() +", ";
		ret += ""+"display = " + get_display() +", ";
		ret += ""+"time = " + get_time() +", ";
		ret += ""+"xkb_type = " + get_xkb_type() +", ";
		ret += ""+"device = " + get_device() +", ";
		ret += ""+"changed = " + get_changed() +", ";
		ret += ""+"flags = " + get_flags() +", ";
		ret += ""+"first_type = " + get_first_type() +", ";
		ret += ""+"num_types = " + get_num_types() +", ";
		ret += ""+"min_key_code = " + get_min_key_code() +", ";
		ret += ""+"max_key_code = " + get_max_key_code() +", ";
		ret += ""+"first_key_sym = " + get_first_key_sym() +", ";
		ret += ""+"first_key_act = " + get_first_key_act() +", ";
		ret += ""+"first_key_behavior = " + get_first_key_behavior() +", ";
		ret += ""+"first_key_explicit = " + get_first_key_explicit() +", ";
		ret += ""+"first_modmap_key = " + get_first_modmap_key() +", ";
		ret += ""+"first_vmodmap_key = " + get_first_vmodmap_key() +", ";
		ret += ""+"num_key_syms = " + get_num_key_syms() +", ";
		ret += ""+"num_key_acts = " + get_num_key_acts() +", ";
		ret += ""+"num_key_behaviors = " + get_num_key_behaviors() +", ";
		ret += ""+"num_key_explicit = " + get_num_key_explicit() +", ";
		ret += ""+"num_modmap_keys = " + get_num_modmap_keys() +", ";
		ret += ""+"num_vmodmap_keys = " + get_num_vmodmap_keys() +", ";
		ret += ""+"vmods = " + get_vmods() +", ";
		return ret;
	}


}



