#
# Copyright 1999-2007 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

help.cmd.proto=Usage:\n\t{0} options... tests...\n\nTests can be given as \
    files or folders containing test files.
help.cmd.introHead=For brief details about a topic, use "-help <term> ...". \
    The argument <term> is a command option or other word related to the topic. \
    Use "-help all" to show all of the help entries.\n\nInformation is \
    available for the following topics.\n
help.cmd.fullHead=
help.cmd.summaryHead=Information is available for the following topics:
help.cmd.tail=For more details and examples, see the online help. You can \
    access this directly from the command line with "-onlineHelp <word>...", \
    or you can start the JavaTest harness and use the Help menu. 
help.cmd.ant=jtreg can also be run with Ant. See the online help for \
    details. For example, use the "-onlineHelp ant" command line option.
help.copyright.txt=Copyright 2008 Sun Microsystems, Inc. \
    All Rights Reserved.\nUse is subject to license terms.
help.cmd.noEntriesFound=No entries were found that matched your query.

help.doc.name=Documentation Options
help.doc.desc=Options for additional documentation
help.doc.h.desc=Command line help. Give words to see help info containing those \
    or use "-help all" to see all available help.
help.doc.h.arg=[words...]
help.doc.n.desc=Release notes
help.doc.onlineHelp.desc=Show the online help. You can also show the online \
    help from the desktop Help menu.
help.doc.onlineHelp.arg=[words...]
help.doc.t.desc=Tag specification supported by this implementation
help.doc.version.desc=Give information about the version of jtreg in use.

help.jdk.name=JDK-related Options
help.jdk.desc=\
    By default, tests will be run using the default JVM in the test JDK. \
    You can pass all applicable JVM options via using -vmoption; in addition, \
    most common JVM options are also supported directly. \
    For full details of any option, consult the documentation for that version \
    of the JDK, or try using "java -help" or "java -X". \
    If an option is not applicable to a particular platform or JDK release, it \
    will be rejected.\n
help.jdk.D.desc=Define a system property
help.jdk.D.arg=<name>=<value>
help.jdk.X.desc=Non-standard VM Options. 
help.jdk.X.arg=*
help.jdk.Xbootclasspath.arg=<path>
help.jdk.Xbootclasspath.desc=Set search path for bootstrap classes and resources
help.jdk.Xbootclasspath/a.arg=<path>
help.jdk.Xbootclasspath/a.desc=Append to end of bootstrap class pat
help.jdk.Xbootclasspath/p.arg=<path>
help.jdk.Xbootclasspath/p.desc=Prepend in front of bootstrap class path
help.jdk.XX.desc=Non-standard VM Options
help.jdk.XX.arg=*
help.jdk.Xint.desc=Non-standard VM Options
help.jdk.Xint.arg=*
help.jdk.Xrunjcov.desc=Options for running jcov
help.jdk.Xrunjcov.arg=*
help.jdk.classic.desc=VM Options
help.jdk.cpa.desc=Append the provided classPath to the CLASSPATH of every \
    test.  This is designed to be used primarily for tests \
    which require non-core JDK functionality.  For example, \
    to test Swing, which is not part of core JDK1.1, the \
    following addition to the the CLASSPATH would be \
    necessary: \n\
    -cpa:/usr/local/java/swing-1.0.3/swingall.jar
help.jdk.cpa.arg=<path>
help.jdk.e.arg=name[=value][,name[=value]...]
help.jdk.e.desc=Specify additional environment variables to be passed to each \
    test. If a value is not given for a name, the current value of the \
    environment variable will be used. Standard environment variables, like \
    DISPLAY, LANG, windir, SystemRoot, etc, will automatically be given to each \
    test, if they are set in the current environment.
help.jdk.enableassertions.desc=Enable or disable assertions
help.jdk.enableassertions.arg=*
help.jdk.enablesystemassertions.desc=Enable or disable system assertions
help.jdk.jdk.desc=Run all tests using specified JDK. \
    e.g. -jdk:/usr/local/java/jdk1.5/solaris-sparc
help.jdk.jdk.arg=<java.home>
help.jdk.jit.desc=Enable the JIT for the tests.  The JIT is turned on by default.
help.jdk.nojit.desc=Disable the JIT for the tests.
help.jdk.vmoption.desc=Any other VM option. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths. \
    This option will be used when compiling and running classes. \
    See also -javaoption.
help.jdk.vmoption.arg=<option>
help.jdk.vmoptions.desc=Any other VM options. You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -vmption options instead. \
    This option will be used when compiling and running classes. \
    See also -javaoptions.
help.jdk.vmoptions.arg=<option>...
help.jdk.agentlib.desc=Load native agent library
help.jdk.agentlib.arg=<libname><[=<options>]
help.jdk.agentpath.desc=Load native agent library by full pathname
help.jdk.agentpath.arg=<pathname><[=<options>]
help.jdk.javaagent.desc=Load Java programming language agent
help.jdk.javaagent.arg=<jarpath><[=<options>]
help.jdk.javacoption.desc=Additional compiler option. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths. 
help.jdk.javacoption.arg=<option>
help.jdk.javacoptions.desc=Additional compiler options. You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -javacption options instead.
help.jdk.javacoptions.arg=<option>...
help.jdk.javaoption.desc=Additional java option for running test classes. \
    You can give this option multiple times. \
    Any embedded filenames must be given with absolute paths. \
    See also -vmoption.
help.jdk.javaoption.arg=<option>
help.jdk.javaoptions.desc=Additional java options for running test classes. \
    You can give this option multiple \
    times, or give many values together, separated by spaces. If you give multiple \
    values, you may need to enclose them in quotes, depending on the shell you use. \
    Any embedded filenames must be given with absolute paths. Warning: do not \
    use this form if any of the options has an argument such as a filename that might \
    contain spaces. In that case, use one or more -javacption options instead. \
    See also -vmoptions.
help.jdk.javaoptions.arg=<option>...

help.main.name=General Options
help.main.desc=
help.main.c.desc=Verify correctness of test descriptions.  Does NOT run tests.
help.main.g.desc=Access regression extensions via the standard JavaTest harness gui
help.main.noignore.desc=suppress the effect of any @ignore tags, allowing the \
    test to proceed as if the @ignore tags were not present. Deprecated: see \
    the -ignore option.
help.main.ignore.arg=<value>
help.main.ignore.desc=Specify how to handle tests containing an @ignore tag.
help.main.ignore.quiet.desc=Completely ignore such tests.
help.main.ignore.error.desc=(Default.) Execute the actions up to the @ignore tag, \
    then give an "Error" result.
help.main.ignore.run.desc=Run the test, as though the @ignore tag were not present.
help.main.o.desc=Specifies the class to observe the progress of a test suite; \
    the class must implement a specific interface; contact a developer \
    for details. E.g. -o:SampleRegressionObserver
help.main.o.arg=<classname>
help.main.od.desc=Specifies the pathname of a directory or .JAR file in which \
    the observer class is located.  The given pathname is simply appended to the \
    CLASSPATH used for the tests, thus care should be taken when naming an \
    observer not to collide with the names of classes internal to the JavaTest \
    harness or the JRE, e.g., put the observer class in its own named package.
help.main.od.arg=<path>
help.main.r.desc=All report files placed here; "./JTreport" is default
help.main.r.arg=<directory>
help.main.ro.desc=Generate report for previously executed tests.  This does not \
    re-run any tests.  A work directory containing the results of the executed \
    tests must be provided.  The default location is "./JTwork". To specify an \
    alternate directory, use -workDir.
help.main.nr.desc=Do not generate a final report.
help.main.startHttpd.desc=Start the http server to view test results
help.main.timeout.desc=A scaling factor to extend the default timeout of all \
    tests.  Typically used when running on slow file systems.
help.main.timeout.arg=<number>
help.main.w.desc=Location for .class files, .jtr files, etc. "./JTwork" is default
help.main.w.arg=<directory>
help.main.retain.desc=Specify files to be retained after each test completes \
    executing. \
    If -retain is not specified, only the files from the last test executed \
    will be retained. \
    If -retain is specified with no argument, all files will be retained. \
    Otherwise, the files may be described by one or more of the following values: 
help.main.retain.all.desc=Retain all files generated by each test
help.main.retain.pass.desc=Retain files generated by tests that pass
help.main.retain.fail.desc=Retain files generated by tests that fail
help.main.retain.error.desc=Retain files generated by tests that caused an error
help.main.retain.file-pattern.desc=Retain files that match a specific filename. \
    The name may contain '*' to match any sequence of characters. \
    For example, result.* or *.err.
help.main.retain.arg=<pass,fail,error,all,file-pattern>,...
help.main.dir.desc=Specify a base directory for test files and directories
help.main.dir.arg=<dir>

help.mode.name=Test Mode Options
help.mode.desc=\
    When the JavaTest harness is used to run tests, two possibly different \
    versions of the JDK are used: the JDK version used to run the harness \
    and the JDK version used to run the test(s).  \
    The following options provide a means to specify the \
    JDK version used to run the tests.  The default is to use the same JDK \
    version (provided by JAVA_HOME) for both the harness and the tests, \
    and for each test to run in its own JVM.\n
help.mode.ovm.desc=Run every test in its own JVM.  The JDK version for the \
    tests may be specified via the -testjdk option.  If \
    not provided, then the JDK version specified by the \
    JAVA_HOME environment variable will be used.
help.mode.s.desc=If possible, run each test in the same JVM as the \
    JavaTest harness. \
    The JDK version used may be specified with -testjdk.  If \
    -testjdk is not provided, then the JDK version will be \
    determined by the environment variable JT_JAVA if it is \
    set.  Otherwise, the environment variable JAVA_HOME is \
    used.

help.select.name=Test Selection Options
help.select.desc=These options can be used to refine the set of tests to \
    be executed.\n
help.select.a.desc=Any test with /manual will not be run
help.select.bug.desc=Run only those tests which apply to the given bugid.
help.select.bug.arg=<bugid>
help.select.exclude.desc=Provide a file specifying tests not to be run
help.select.exclude.arg=<file>
help.select.k.desc=A keyword boolean expression for test selection. The \
    expression can contain keyword names, combined with & (and), | (or), \
    ! (not) and parentheses.
help.select.k.arg=<keywordExpr>
help.select.m.desc=Only tests with /manual will be run
help.select.noshell.desc=Any tests which contain shell actions will not be run
help.select.status.arg=<value>,...
help.select.shell.desc=Only tests which contain shell actions will be run
help.select.status.desc=Select tests according to their result in an earlier \
    run. The value can be one or more of the following values, separated by commas.
help.select.status.pass.desc=Tests that passed
help.select.status.fail.desc=Tests that failed
help.select.status.notRun.desc=Tests that have not been run
help.select.status.error.desc=Tests that could not be run because of errors, or tests that were ignored

help.verbose.name=Verbose Options
help.verbose.desc=These options control the amount of output written to the \
    console while running tests\n
help.verbose.v.desc=Increase the amount of output written to the console. A value, \
    or selected combinations of values separated by commas, \
    may be given to select the type of output desired.
help.verbose.v.all.desc=Selected contents of JTR file for all tests (includes stdout/stderr)
help.verbose.v.fail.desc=Selected contents of JTR file for failed tests
help.verbose.v.error.desc=Selected contents of JTR file for errored tests
help.verbose.v.pass.desc=Selected contents of JTR file for passed tests
help.verbose.v.summary.desc=One line of output per test: status, test name
help.verbose.v.default.desc=Three lines of output per test: start, end, status
help.verbose.v.nopass.desc=Suppress output for tests that passed 
help.verbose.v.time.desc=Elapsed time per action
help.verbose.v.arg=<value>
help.verbose.v1.desc=Short for -verbose:summary
help.verbose.va.desc=Short for -verbose:all
help.verbose.ve.desc=Short for -verbose:error
help.verbose.vf.desc=Short for -verbose:fail
help.verbose.vp.desc=Short for -verbose:pass
help.verbose.vt.desc=Short for -verbose:time

help.onlineHelp.pleaseWait=Loading online help ...

help.cantFindReleaseNotes=The Release Notes are not available.
help.cantFindSpec=The Tag Specification is not available.
help.cantReadSpec=Error reading the Tag Specification: {0}
help.releaseNotes=The Release Notes are available in {0}
help.version.txt={0}, version {1} {2} {3}\nInstalled in {4}\nRunning on platform version {5} from {6}.\nBuilt with {7} on {8}.
help.version.unknown=(unknown)

main.badArgs=Error: {0}
main.badConcurrency=Bad use of -concurrency
main.badParams=Bad parameters specified: {0}
main.badTimeoutFactor=Bad use of -timeoutFactor
main.cantCreateDir=Cannot create directory: {0}
main.cantFindFile=Cannot find file: {0}
main.cantFind.jtreg.jar=Cannot determine the location of jtreg.jar
main.cantFind.javatest.jar=Cannot determine the location of javatest.jar
main.cantDetermineTestSuite=Cannot determine test suite from test (is TEST.ROOT missing?): {0}
main.cantOpenFile=Cannot open file {0}: {1}
main.cantOpenTestSuite=Cannot open test suite {0}: {1}
main.cantRead=Cannot read {0}: {1}
main.cantWrite=Cannot write {0}: {1}
main.cantWriteTempFile=Cannot write temp: {0}
main.cant.mix.samevm.java.options=Cannot use -javaoption or -javaoptions in same VM mode

main.error=Error: {0}
main.interrupted=Error: Interrupted!
main.jdk.not.set=JDK not set
main.jdk.not.found=JDK not found: {0}
main.noTests=Test results: no tests selected
main.noTestSuiteOrTests=No test suite or tests specified.
main.nobDate=unknown
main.obsvrFault=problem instantiating observer: {0}
main.obsvrNotFound=Cannot find observer class: {0}
main.obsvrType=Observer is not of type {0}: {1}
main.tests=Test results: \
    {0,choice,0#|0<passed: {0,number}}{1,choice,0#|1#; }\
    {2,choice,0#|0<failed: {2,number}}{3,choice,0#|1#; }\
    {4,choice,0#|0<error: {4,number}}{5,choice,0#|1#; }\
    {6,choice,0#|0<not run: {6,number}}
main.testsError=Error: Errors occurred while running tests.
main.testsFailed=Error: Some tests failed or other problems occurred.
main.testNotInTestSuite=Test not in test suite: {0}
main.unexpectedException=Error: Unexpected exception occured!
main.unknownIgnore=Unrecognized value for -ignore: $1
main.unknownVerbose=unsupported level for verbose option: `{0}''

opt.conflict=Invalid option combination: {0} and {1}
opt.duplicate=Duplicate option: {0}
opt.empty=Invalid option: (empty)
opt.missing.value=No value given for option {0}
opt.unexpected.value=Unexpected value for option {0}
opt.unknown=Invalid option: {0}

suite.cantCreateInterview=can''t create interview: {0}
suite.cantRead=can''t read file: {0}



