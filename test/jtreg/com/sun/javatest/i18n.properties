#
# $Id$
#
#
# Copyright 1996-2008 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

allTestsFilter.description=Unfiltered view of the test suite and results in the work directory.
allTestsFilter.name=All Tests
allTestsFilter.reason=

bp.badConcurrency=Invalid number of threads ({0}), specified in the concurrency field.
bp.badKeywords=Error in specified keywords: {0}
bp.badTestSuite=Problem opening test suite.\n{0}
bp.badTimeout=Invalid value ({0}in the timeout field.
bp.badWorkDir=Invalid work directory specified: {0}
bp.cantFindTestSuite=Cannot find test suite specified: {0}
bp.cantFindWorkDir=Cannot find work directory specified: {0}
bp.exclListFault=Problem reading exclude list.\n{1}
bp.exclListNotFound=Cannot find exclude list ({0})
bp.noTestSuite=No value given for the test-suite root. 
bp.workDirError=Problem opening work directory: {0}
bp.workDirMissing=No value specified for the work directory.

compFilter.description=General purpose composite filter (many filters in one).
compFilter.exception=Exception occurred while filtering test:\n{0}
compFilter.name=Composite Filter
compFilter.reason=Filtered out by a composite filter.
compFilter.unset.description=[No Description]
compFilter.unset.name=[No Name]
compFilter.unset.reason=[No Reason Available]

dtr.details=Details
dtr.noResult=Internal error: result not set while executing test {0}
dtr.stackTrace=Stack trace
dtr.threadKilled=Thread killed while executing test {0}: no results available
dtr.unexpectedThrowable=Unexpected {2,choice,0#exception|1#error|2#throwable} caught from test {0}: {1}

editJTI.badCmd=Invalid edit command: "{0}"
editJTI.badOption=Unrecognized option: "{0}"
editJTI.badState=Error: "{0}"\nSupplying the test suite using -testsuite (-ts) or -workdir (-wd) is required when using keywords.
editJTI.cantAccessClass=Cannot access interview class {0}, specified in {1}
editJTI.cantCreateInterviewForTestSuite=Cannot create interview for test suite {0}\n{1}
editJTI.cantFindClass=Cannot find interview class {0}, specified in {1}
editJTI.cantFindFile=Cannot find file: {0}
editJTI.cantFindImport=Can't find import file "{0}"
editJTI.cantFindMatch=Cannot find any questions that match the search text: {0}
editJTI.cantFindQuestion=Cannot find question {0}
editJTI.cantFindTestSuite=Cannot find test suite {0}
editJTI.cantHaveClassPathAndTestSuite=Cannot specify both class path and test suite options
editJTI.cantInstantiateClass=Cannot instantiate interview class {0}, specified in {1}
editJTI.cantOpenFile=Cannot open file: {0}\n{1}
editJTI.cantOpenImport=Cannot open import file "{0}":\n{1}
editJTI.cantOpenTestSuite=Cannot open test suite {0}\n{1}
editJTI.cantReadImport=An error occurred while reading import file "{0}": \1
editJTI.cantSaveFile=Cannot save file: {0}\n{1}
editJTI.cantSetValue=Cannot set value for question {0}\n{1}
editJTI.cantWriteLog=Cannot write log: {0}\n{1}
editJTI.dupOption=Duplicate option: {0}
editJTI.invalidInterview=Invalid interview file {0}; does not specify valid interview class
editJTI.noInterview=No .jti file provided
editJTI.notATestSuite=Invalid path for test suite option: {0}\nIt does not identify a valid test suite
editJTI.update=Question:  {0}\nOld value: {1}\nNew value: {2}\n
editJTI.usage.classpath1=\  -classpath <classpath>    Override classpath
editJTI.usage.classpath2=\  -cp <classpath>
editJTI.usage.edit=Edit commands:
editJTI.usage.help1=\  -help                     Print this message
editJTI.usage.help2=\  -usage
editJTI.usage.help3=\  -\\?
editJTI.usage.log1=\  -log <log-file>           HTML dump of interview
editJTI.usage.log2=\  -l <log-file>
editJTI.usage.options=Options:
editJTI.usage.outfile1=\  -out <output-file>        Output JTI file
editJTI.usage.outfile2=\  -o <output-file>
editJTI.usage.path1=\  -path                     Show active interview path
editJTI.usage.path2=\  -p
editJTI.usage.preview1=\  -preview                  Preview mode
editJTI.usage.preview2=\  -n
editJTI.usage.search=\  /<search>/<replace>/        Search for and replace a string
editJTI.usage.set=\  <tag name>=<value>          Set answer to specific question
editJTI.usage.summary=\ [options] [edit-cmds] <jti file>
editJTI.usage.title=Usage:
editJTI.usage.ts1=\  -testsuite <test-suite>   Override test suite location
editJTI.usage.ts2=\  -ts <test-suite>
editJTI.usage.verbose1=\  -verbose                  Verbose mode
editJTI.usage.verbose2=\  -v
editJTI.wouldNotSave=Preview: interview would not be changed.
editJTI.wouldSaveEdited=Preview: updated interview would be saved to {0}
editJTI.wouldSaveNotEdited=Preview: interview would be saved to {0}
editJTI.wouldWriteLog=Preview: would write question log to {0}

editLinks.badHTML=error parsing HTML input ({0}:{1:number})
editLinks.badOpt=bad option: {0}
editLinks.dirExpected=directory expected: {0}
editLinks.idExpected=identifier expected ({0}:{1:number})
editLinks.mismatchQuotes=mismatched quotes ({0}:{1:number})
editLinks.noEdits=Warning: no edits specified
editLinks.noInput=no input files or directories specified
editLinks.noOutput=no output file or directory specified
editLinks.usage=Usage:\n   {0} options files...\n\nArguments:\n-e oldPrefix newPrefix\n        Links beginning with oldPrefix are rewritten to begin with newPrefix\n-ignore file\n        Ignore files and directories named 'file' when scanning directories.\n        E.g. -ignore SCCS\n-o file\n        Output file or directory. It should only be a file if the input is a\n        single file; otherwise it should be a directory. It will default to the\n        input file or directory if just a single one is given.\nfiles...\n        Input files or directories to be copied, with the links edited.\n

env.badExpr=bad $ expression
env.badExprChar=bad $ expression: "${0}"
env.badName=problem evaluating "{0}", defined in {1}.\n{2}
env.badOption=bad $ expression: unrecognized option after ":": {0}
env.loop=Environment "{0}" directly or indirectly inherits itself
env.recursive=recursive definition for "{0}", defined in {1}

excl.badEntry=Failed to read entry: {0}
excl.cantExcludeCase=Cannot exclude test case when entire test already excluded: {0}
excl.cantExcludeTest=Cannot exclude entire test when test case already excluded: {0}

excludeFilter.description=Select those tests not on an exclude list.
excludeFilter.name=Excluded Tests
excludeFilter.reason=Test appears on the exclude list.

finder.badArg=Unrecognized argument: {0}
finder.nonUniqueId=Warning: Tests found with non-unique id within file.\nFile: {0}\nid: {1}\nLine number of this occurrence: {2}\nLine number of first occurrence: {3}\nThis occurrence has been automatically renamed to {4}.
finder.spaceInId=A test has been found whose path includes a space character.\nThe test is {0}
finder.noTests=no test descriptions found while reading {0}

fault.genericMsgStart= **  Internal JT Harness error.  Please contact the developers. **
fault.genericMsgEnd=**  End Internal JT Harness error. **
fault.origin=--> The exception that caused this problem was:
fault.default=Unexpected exception: {0}
fault.unexpected=--> Unexpected exception:

fp.badConcurrency=Bad value for concurrency: "{0}"
fp.badTimeoutFactor=Bad value for timeout factor: "{0}"
fp.badEnv=Problem with environment specified: {0}\n{1}
fp.envNotFound=Environment "{0}"" not found. If you think the name is correct, check that it contains at least one of the following entries: description, inherits, finder, script, menu.
fp.noEnvs=No environments available
fp.undefinedEntry=Environment contains undefined values; first such entry is "{0}", which was found in {1}. You must correct this value (and any others like it in this environment) before the environment can be used.

harness.alreadyRunning=Test harness is already running
harness.badInitFiles=Parameters supplied invalid initial files.\n{0}
harness.classDirAlreadySet=class dir already set for Harness
harness.done=Completed test run: {0,choice,0#ok|1#not ok}
#harness.finderError=Errors occurred while reading tests.
harness.incompleteParameters=The configuration parameters you specified are incomplete or invalid.\n{0}
harness.interrupted=Interrupted!
harness.noTests=No tests found or selected. Check your configuration settings.
harness.starting=Starting test run
harness.testsuiteError={0}
harness.tooManyErrors=Test run aborted because too many tests failed in succession.
harness.trProb=Error while looking up test (halting): {0}.

harnessHttp.badRequest=Unknown request: {0}
harnessHttp.env.hdr=Harness Test Environment
harnessHttp.env.title=Harness Test Environment
harnessHttp.env.error=-Error while resolving-
harnessHttp.env.none=No Environment
harnessHttp.env.name=Environment Name: 
harnessHttp.index.hdr=Harness Index Page
harnessHttp.index.title=Harness Index Page
harnessHttp.interview.title=Harness Interview Settings
harnessHttp.interview.hdr=Harness Interview Settings
harnessHttp.interview.none=No interview available
harnessHttp.ioProblem=I/O Exception while producing this page!
harnessHttp.noStop=Cannot stop; harness is not running.  Ignored.
harnessHttp.parameters.emptyJtx=(None)
harnessHttp.parameters.env=Test Environment: 
harnessHttp.parameters.interview=Interview: 
harnessHttp.parameters.noEnv=(No Environment Available)
harnessHttp.parameters.noInterview=(No Interview Available)
harnessHttp.parameters.noInterviewFile=(No Interview Filename Available)
harnessHttp.parameters.jtx=Exclude Lists: 
harnessHttp.parameters.hdr=Configuration:
#harnessHttp.parameters.keyw=Keywords:
harnessHttp.parameters.noJtx=(Unset)
harnessHttp.parameters.noParams=No configuration information available from the Harness.
harnessHttp.parameters.noTs=(Unset)
harnessHttp.parameters.noTests=(No tests specified)
harnessHttp.parameters.noWd=(Unset)
harnessHttp.parameters.tsName=Test Suite Name:  
harnessHttp.parameters.tsPath=Test Suite Path:  
harnessHttp.parameters.urls=Initial Tests:
harnessHttp.parameters.wd=Work Directory: 
harnessHttp.results.hdr=Test Results:
harnessHttp.stop.hdr=JT Harness Stop
harnessHttp.stopped=Harness stopped!
harnessHttp.state.run.val=running=
harnessHttp.stopConfirm.hdr=Confirm JT Harness Stop
harnessHttp.stopConfirm.txt=If you really want to stop the JT Harness harness, press the button below...
harnessHttp.stopConfirm.btn=STOP
harnessHttp.stopErr.hdr=JT Harness Stop Warning
harnessHttp.stopErr.text1=The Harness stop token your URL presented does not belong to this
harnessHttp.stopErr.text2=instance of the JT Harness harness.
harnessHttp.stopErr.text3=Please verify that this is the correct instance of the JT Harness harness and click
harnessHttp.stopErr.text4=HERE
harnessHttp.stopErr.text5=if you really want to stop this Harness.
harnessHttp.trt.link=All Tests
harnessHttp.trt.none=No results available, work directory probably not set.
harnessHttp.text.ts.name=testsuite.name
harnessHttp.text.ts.path=testsuite.path
harnessHttp.text.empty=(none)
harnessHttp.text.unavail=Unavailable
harnessHttp.text.wd.val=workdir

ip.badTmplPath=Saving to the specified path/filename is not permitted by the test suite.
ip.cantCreateInterviewForTestSuite=Cannot create interview for test suite {0}.\n{1}
ip.cantFindConfigFile=Cannot find configuration file {0}
ip.cantFindTestSuite=Cannot find test suite {0}
ip.cantFindTestSuiteInFile=Cannot find test suite {0}, specified in configuration file {1}
ip.cantFindWorkDir=Cannot find work directory {0}
ip.cantFindWorkDirInFile=Cannot find work directory {0},  specified in configuration file {1}
ip.cantLoadInterview=Cannot load data from configuration file {0}.\n{1}
ip.cantOpenConfigFile=Cannot open configuration file {0}.\n{1}
ip.cantOpenTestSuite=Cannot open test suite {0}.\n{1}
ip.cantOpenTestSuiteInFile=Cannot open test suite {0}, specified in configuration file {1}.\n{2}
ip.cantOpenWorkDir=Cannot open work directory {0}.\n{1}
ip.cantOpenWorkDirInFile=Cannot open test suite {0}, specified in configuration file {1}.\n{2}
ip.errorReadingFile=Error reading file {0}.\n{1}
ip.noAnswer=The following configuration question requires a valid answer:\n-- "{0}"\n-- "{1}"\nThe system tag for the question is "{2}".\nYour response is currently {3,choice,0#(unset)|1#set to "{4}"}.\nPlease update your configuration and try again.
ip.noTestSuiteInFile=No test suite specified in configuration file {0}
ip.noPaths=No test suite, work directory or configuration file specified.
ip.unknownArgs=Unrecognized arguments specified for test suite.

iurlFilter.description=Select tests by name or location in the test suite
iurlFilter.name=Test Name/Location
iurlFilter.reason=Test name/location not selected

keywordsFilter.description=Select tests according to their keywords
keywordsFilter.name=Keywords
keywordsFilter.reason=Test does not match the given keyword expression

kw.badKeywordExpr=Syntax error in keyword expression
kw.badKeywordType=Unexpected keyword type field: {0}
kw.invalidKeyword="{0}" is not a valid keyword for this test suite
kw.noExpr=No expression given
kw.noKeywords=No keywords given

ltr.desc=Shows the results for tests executed in the last or current test run.
ltr.name=Last Test Run
ltr.reason=Not selected for execution in current or last test run.

pi.jcd.result=javatestClassDir = {0}
pi.jcd.cant=cannot determine javatestClassDir
pi.jcd.noInstallDir=The harness cannot determine its installation directory.\n\
        This is normally due to problems with the classpath you have used.\n\
        Try checking your classpath carefully. If you still have problems,\n\
        try running the JT Harness harness with the {0}\n\
        system property. If problems still persist, you can workaround the\n\
        problem by setting the {1} system property to the location of javatest.jar.\n

rslt.badChars=Bad character(s) at end of block {0}
rslt.badCompare=Problem comparing results.\n{0}
rslt.badStatus=Attempt to construct a result with a null status.
rslt.badTestUrl=Attempt to construct a result with a null test URL (Name).
rslt.badWorkdir=Attempt to construct a result with a null work directory.
rslt.badEOF=Error while parsing result file: unexpected end of file
rslt.badFile=Error while reading result file.\n {0}
rslt.badFormat=Result file format not recognized; expected lines are missing.
rslt.badLine=Result file format not recognized; unexpected line `{0}''.
rslt.badHeader=Result file format not recognized: bad header on first line: {0}
rslt.badHeaderVersion=Error while parsing result file: bad version number in header.\n{0}
rslt.empty=Result file empty: {0}
rslt.fileNotFound=Result file not found: {0}
rslt.noOutputTitle=An output title could not be found.
rslt.noResultFile=Unable to reload a test result - do not know where the JTR is.
rslt.noSectionTitle=A section title could not be found.
rslt.noSectionResult=A section result could not be found.

script.alarm.cancelled=alarm {0} cancelled
script.alarm.interrupt=alarm {0} interrupting {1}
script.alarm.started=alarm {0} started
script.allUpToDate=no files needed compiling
script.badClassName=Bad class name "{0}", used in "{1}"
script.badCommand=problem getting info in environment "{0}" for "command.{1}"
script.badDateStamp=cannot check date stamp for {0} compiling anyway; {1}
script.badExecuteArgs=problem evaluating executeArgs for test
script.badPackage=malformed package statement for {0}; compiling anyway
script.badTestClassDir=bad value for testClassDir
script.badTestStatus=Illegal status returned from test: {0}
script.cantAccessClass=Can't access class "{0}", used in "{1}"
script.cantCreateClass=Can't instantiate class "{0}", used in "{1}"
script.cantFindClass=Can't find class "{0}", used in "{1}"
script.cantRunClass=Can't run class "{0}": it does not implement "{1}"
script.command=command: {0} {1}
script.compFailExp=compilation failed as expected
script.compFailUnexp=compilation failed unexpectedly
script.compSuccExp=compilation succeeded as expected
script.compSuccUnexp=compilation did not fail as expected
script.execFailExp=execution failed as expected
script.execSuccUnexp=execution did not fail as expected
script.interrupted=test was interrupted! (timeout?)
script.noAction=no action specified
script.noCommand=environment "{0}" does not define a command "{1}"
script.noExecuteClass=no executeClass specified
script.noExtnInSrc=no filename extension in source file
script.noRMIClasses=no rmiclasses specified in test description
script.noSource=no sources specified in test description
script.noStatus=Script did not return status
script.noTestDesc=test description not set
script.noTestEnv=test environment not set
script.noTestRslt=test result not set
script.noWorkDir=work directory not set
script.notResponding=Test not responding after {0} interrupts
script.srcLockInterrupted=interrupted while waiting to acquire internal lock on source files
script.srcLockTimeout=timeout waiting to acquire internal lock on source files
script.testEnvFault=Fault while trying to evaluate "{0}":\n{1}
script.timedOut=Test {0} has timed out and is not responding after {1} interrupts
script.timeout=Timeout signalled after {0} seconds
script.unexpExecErr=Unexpected error while executing command "{0}": {1}
script.unexpExecExc=Unexpected exception while executing command "{0}": {1}
script.unexpExecThr=Unexpected throwable while executing command "{0}": {1}
script.unexpLoadErr=Unexpected error trying to load command "{0}": {1}
script.unexpLoadExc=Unexpected exception trying to load command "{0}": {1}
script.unexpLoadThr=Unexpected throwable trying to load command "{0}": {1}
script.upToDate=file does not need compiling: {0}

statusFilter.cantFindTest=Cannot find test {0}
statusFilter.description=Select tests according to their prior result status
statusFilter.name=Prior Status
statusFilter.noStatus=No prior status found for test {0}
statusFilter.reason=Test does not match the given status criteria

tec.cantFindFile=Cannot find specified file {0}.
#tec.interviewClassAccess=Problem accessing interview class specified in file {0}.\n{1}
#tec.interviewClassInstantiation=Problem instantiating interview class specified in file {0}.\n{1}
#tec.interviewClassNotFound=Cannot find interview class specified in file {0}.\n{1}
tec.ioError=Problem occurred while loading file {0}.\n{1}
#tec.noInterview=No interview class specified in file {0}.

trace.cleanup=Doing post-run cleanup
trace.doneOK=Completed: All tests passed
trace.doneNotOK=Completed: Some tests did not pass
trace.error=Error: {0}
trace.starting=Starting tests.\nTest suite class: {0}\nTest finder class: {1}
trace.stopping=Stopping tests
trace.testStarting=\nTest starting: {0}
trace.testFinished=\nTest finished: {0}: {1}

#trc.abort=Cache update action aborted due to shutdown signal.
#trc.badtr=An unrecoverable error occured while trying to read a result file, the error was {0}.
trc.badjtr=Result cache could not reload {0}, deleting it and continuing!
#trc.cantopen=An unrecoverable error occured while trying to create/open file {0}, the error was: {1}.
#trc.flushError=Error flushing results to the cache. File may be corrupted.
trc.lockTimeout=Timeout waiting for test result cache lock
trc.lostjtr=Result cache could not locate {0}, not adding to cache.
#trc.rebuildStart=Rebuilding cache, please wait...
#trc.rebuildDone=Done!
#trc.recovered=Result cache recovery seems successful.
#trc.recovering=Result cache had a serious fault, attempting to recover.\n        Fault description: {0}
trc.reloadFault=Error reading test result cache ({0})
trc.rmCachev1=Removing result cache version 1 file {0}
trc.rmLockv1=Removing result cache version 1 lock file {0}
#trc.timeout=Timeout waiting for lock {0}
#trc.unrecover=An unrecoverable error occured while trying to read/write cache file {0}, the error was {1}.
#trc.waiting=Result cache waiting for lock {0}.

trt.alreadyFinder=Finder already registered.
trt.badInitFile=Invalid initial file encountered: {0}
trt.cacheError=An unrecoverable error happened while processinng the test result cache ({0})
trt.invalidPath=Invalid TRT path.  Path already has TestResult which signifies the end.
trt.invalidIURL=Invalid initialURL: {0}
trt.nodeNull=Start location for find must be non-null.
trt.noElements=No more elements to enumerate.
#trt.noEntries=TestResultCache unable to provide full list of entries!
trt.pathNull=Path/Object to find must be non-null.
trt.rebuild=Rebuilding test result cache...
trt.refreshNoTest=Could not locate a test named {0} to refresh.
trt.rstTest=Bad result file detected, attempting to recover {0}.
trt.timeoutForLock=Timeout waiting to lock result cache for {0}
trt.trNoTd=Fault from TestResult while processing initial URLs, no TestDescription available
#trt.trcCreate=Problem while creating TestResultCache.\n{0}
#trt.trcFault=Warning - Problem while writing results:\n     {0}
trt.waitingForLock=Waiting to lock test result cache for {0} for {1,choice,0#{2} seconds|1#1 minute|1<{1} minutes}

trtHttp.index.title=Test Result Index Page
trtHttp.index.hdr=Test Result Index Page
trtHttp.stats.hdr=Current Statistics:
trtHttp.size.hdr=Table Size:
trtHttp.tests.title=Harness Test Listing
trtHttp.tests.hdr=Test Listing
trtHttp.tests.name=Test Name
trtHttp.tests.status=Status
trtHttp.wd.hdr=Work Directory:
trtHttp.wd.unset=(Unset)

trttn.alreadyExists=The node "{0}" already exists.  Malformed test suite or internal error!
trttn.badCast=Unexpected exception while casting a child node.
trttn.nameClash=Name clash while inserting dir node named {0}.  Aborting node insertion.
trttn.noObject=Could not load class java.lang.Object!
#trttn.noPaths=Matching more than a filename is not possible.
trttn.noTd=Unexpected error!  Cannot retrieve TestDescription from TestResult.
trttn.nullNode=Cannot insert null into the tree.
trttn.nullSearch=Cannot search for a null item.
trttn.unexpecCast=Unexpected class cast exception, wanted TreeNode.

ts.badArgs=Unrecognized arg: {0}
ts.badClassName=Bad class name: {0}.
ts.badClassPath=Bad class path for {0}.\n{1}
ts.cantCanonicalize=Error while determining canonical path name for test suite, {0}.\n{1}
ts.cantFindConstructor=Cannot find suitable constructor for class {0}.\n{1}
ts.cantFindDoc=Cannot find document resource "{0}"
ts.cantFindNameInEnv=Problem looking up "{0}" in environment.\n{1}
ts.cantInit=Problem initializing class {0}.\n{1}
ts.cantInstantiate=Problem instantiating class {0}.\n{1}
ts.cantOpenDoc=Cannot open document resource "{0}".\n{1}
ts.cantReadTestSuiteFile=Cannot read testsuite.jtt file for test suite.\n{0}
ts.classNotFound=Cannot find class {0}.\n{1}
ts.errorInitDefaultInterview=Error initializing default interview.\n{0}
ts.errorInitFinder=Error initializing test-finder: {0}.\n{1}
ts.errorInitInterview=Error initializing interview {0}.\n{1}
ts.illegalAccess=Problem accessing class {0}.\n{1}
ts.logger.duplicatelognamefault=Logger with key {0} already exists
ts.logger.nosuchlogfault=The following log not found: {0}
ts.logger.nologscreated=No logs created currently. You should create log {0} using TestSuite.createLog(WorkDirectory,String,String) first.
ts.logger.nullwd=null WorkDirectory parameter is not allowed
#ts.logger.noworkdir=Can't create general purpose logger: work directory is null
ts.noScript=Cannot determine script: No suitable environment entries
ts.notASubtype={0}, defined in the {1} entry is not valid here - it is not a subtype of {2}
ts.notTestSuiteFile=Path does not identify a valid test suite.\n{0}

wd.alreadyExists=Work directory already exists.
wd.badTestSuiteFile=Problem reading test suite data for work directory {0}.\n{1}
wd.cantCanonicalize=Error while determining canonical path name for work directory, {0}.\n{1}
wd.cantCreate=Cannot create work directory (could not create {0})
wd.cantFindTestSuite=Cannot find test suite for work directory {0}.\nThe expected test suite was {1}.
wd.cantOpenTestSuite=Cannot open the test suite associated with the work directory named {0}.\n{1}
wd.cantWriteTestSuiteInfo=Problem writing test suite info for work directory {0}.\n{1}
wd.mismatchID=Work directory does not match the specified test suite.
wd.noTestSuiteFile=Cannot determine the test suite for the work directory {0}.
wd.noTestSuiteRoot=Cannot determine the test suite for the work directory {0}.
wd.notDirectory={0} is not a directory.
wd.notEmpty={0} is not empty.
wd.notReadable={0} is not readable.
wd.notWorkDir={0} is not a work directory.

notification.logname=Notifications

templProp.conflictText=Some new values in the template conflicts with changes you have made to the configuration:
templProp.updateText=Your configuration has been updated with the changes that do not conflict with your configuration:
tmpltProp.Configuration=Configuration
tmpltProp.oldTmplt=Old Template
tmpltProp.newTmplt=New Template
tmpltProp.tmpFileError=Can not read template file {0}
tmpltProp.notAvailable=n/a
